<launch>
    <!-- Start ROS communication between the robot's computer and Linorobot base -->
  
    <param name="robot_description" textfile="$(find gazebo01_test)/urdf/linorobot.urdf" />



       <!-- IMU Relay and Filter -->
    <include file="$(find linorobot)/launch/include/imu/imu.launch" />

    <!-- Publish Linorobot odometry -->
    <node pkg="linorobot" name="lino_base_node" type="lino_base_node"></node>

    <!-- Publish static transform from base_footprint to base_link -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.098 0 0 0  /base_footprint /base_link"/>

    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization"> 
        <remap from="odometry/filtered" to="odom" />
        <rosparam command="load" file="$(find linorobot)/param/ekf/robot_localization.yaml" />
    </node>

    <!-- Run Linorobot compatible laser drivers -->
    
    <!-- <include file="$(find ydlidar_ros_driver)/launch/lidar_view.launch" /> -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find guide01_test)/gazebo/mycar2.rviz" />
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop"></node> -->

    <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher" />
    <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher" />
    <include file="$(find linorobot)/launch/include/laser.launch" />
</launch>
